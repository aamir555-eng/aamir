name: RSS Auto Publish

on:
  push:
    branches:
      - main       # Run on push to main branch
  schedule:
    - cron: "0 */3 * * *"   # Run every 3 hours UTC
  workflow_dispatch:         # Manual trigger from GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install lxml_html_clean # Ensure this is in requirements.txt or installed separately

      # --- START OF CACHE ADDITION ---
      - name: Restore last published state from cache
        uses: actions/cache@v3
        with:
          path: last_published.txt
          key: ${{ runner.os }}-last-published
          # No restore-keys here, as it's the first attempt to retrieve.
          # If cache miss, file won't exist, which is handled by script's get_last_published.

      - name: Show content of last_published.txt (for debugging)
        run: |
          if [ -f last_published.txt ]; then
            echo "last_published.txt content: $(cat last_published.txt)"
          else
            echo "last_published.txt does not exist in cache."
          fi
        # Add 'continue-on-error: true' if you want the workflow to proceed even if this step fails (e.g., file not found initially)
        continue-on-error: true

      # --- END OF CACHE ADDITION ---

      - name: Run script with secrets
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          WP_SITE_URL: ${{ secrets.WP_SITE_URL }}
          WP_USERNAME: ${{ secrets.WP_USERNAME }}
          WP_APP_PASSWORD: ${{ secrets.WP_APP_PASSWORD }}
          DEFAULT_IMAGE_URL: ${{ secrets.DEFAULT_IMAGE_URL }}
        run: python main.py

      # --- START OF CACHE ADDITION ---
      - name: Save last published state to cache
        uses: actions/cache@v3
        with:
          path: last_published.txt
          key: ${{ runner.os }}-last-published
          # We need restore-keys here to ensure the cache is updated correctly
          # if a previous entry exists but was not hit in the restore step (less common for a single key)
          restore-keys: |
            ${{ runner.os }}-last-published
      # --- END OF CACHE ADDITION ---
